<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MPlayerX | No More Than Nothing]]></title>
  <link href="http://blog.mplayerx.org/blog/categories/mplayerx/atom.xml" rel="self"/>
  <link href="http://blog.mplayerx.org/"/>
  <updated>2015-06-17T12:15:15+09:00</updated>
  <id>http://blog.mplayerx.org/</id>
  <author>
    <name><![CDATA[Zongyao Qu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[1.1.0 is out.]]></title>
    <link href="http://blog.mplayerx.org/blog/2015/06/13/1-dot-1-0-is-out/"/>
    <updated>2015-06-13T08:57:00+09:00</updated>
    <id>http://blog.mplayerx.org/blog/2015/06/13/1-dot-1-0-is-out</id>
    <content type="html"><![CDATA[<p>Finally I managed to make some time to work this out.</p>

<p>Except the change on the look, I'd like to introduce some interesting changes internally.</p>

<h3>1. Partial update.</h3>

<p>By far, The most issues I have received is that <strong><em>MPlayerX was unable to play some file.</em></strong> Most of the time, such issue is not related with MPlayerX itself, but ffmpeg or mplayer which works as the player core inside of MPlayerX.</p>

<p>So I introduced this so called <strong><em>Partial Update</em></strong> into 1.1.0, which enable me to update the ffmpeg/mplayer part without updatig the whole app. Hopfully It could help me to update the player core to resolve your playback issues more quickly.</p>

<!-- more -->


<p>It is still a hidden settings, for the one who only wants to know how to enable it, here you go</p>

<pre><code>    cd ~/Library/Preferences
    defaults write org.niltsh.MPlayerX CorePartialUpdate 1
</code></pre>

<p>For the one who wants to know how it works, please give me 5 minutes to explain the mechanism.</p>

<p>MPlayerX now wraps the core part as a bundle. Each time it starts, it will check ~/Library/Application Support/MPlayerX/bundles, if there has the latest bundle, MPlayerX will just use it, Otherwize, MPlayerX will overwirte with the default bundle inside of the App first.</p>

<p><img src="/images/partial-update/partialupdate-bundles.png" alt="bundles" /></p>

<p>Afer that, MPlayerX will check a separate channel if there is any update for these bundles, if there is a match, it will download and replace the bundles at next start-up.</p>

<p>And you will receive a notification as below,</p>

<p><img src="/images/partial-update/partialupdate-notif.png" alt="notification" /></p>

<h3>2. HTTPS support</h3>

<p>About a yeaer ago, Youtube started to transfer all their video links into https, which broke MPlayerX's online playback totally. Now MPlayerX add the support for https, and please enjoy the non-ads video again.</p>

<p>There are still other trivial optimizations to find out, please enjoy the new version of MPlayerX.</p>

<p>Thank you.</p>

<p>BRs,
Zongyao Qu</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Progress on MPlayerX]]></title>
    <link href="http://blog.mplayerx.org/blog/2015/04/16/some-progress-on-mplayerx/"/>
    <updated>2015-04-16T10:53:00+09:00</updated>
    <id>http://blog.mplayerx.org/blog/2015/04/16/some-progress-on-mplayerx</id>
    <content type="html"><![CDATA[<p>Last year was a tremendous year for me, my first kid was given birth ( actually I'd rather say MPX is my first child :)), work made me busier and busier, I was never happier and busier than before.</p>

<p>Taking a look back, the only down thing is that I didn't have much time on making much progress on my "first child" as before, even I didn't have much time to enjoy my best favorite movies. The only one I didn't miss is <a href="http://www.imdb.com/title/tt0816692">Interstellar</a>, which gave me 3 hours peace and enjoyment in mind.</p>

<p>I was hesitating once, as seeing more and more people are now spending more and more time on their iPhones and Androids, I wondered how much it is still meaningful to make progress on the desktop application. Until one day, I captured my kid by HandyCam, edited it and played it on TV, and the other day, I waited for minutes to see the video in youtube, and another day, I found I need to analyze a video frame by frame... I found mobile phone is still not that powerful and versatile to accomplish such tasks. I knew I need to continue my efforts on MPlayerX to keep the wonderful user experience that my iPhone could not.</p>

<p>Now I have made 50+ patches, make MPlayerX more adoptable to Yosemite, fix several bugs, upgrading the new core to support https and latest protocol of youtube. Hope I could release it before 10.11 is coming.</p>

<p>The other thing is that, MPlayerX will start to utilize the installer to fulfil monetization. I knew it may bring many negative comments, but honestly it is the best way to keep the developer motivated. For anyone who cares about this, please check the installer and make sure only install MPX, then it should be no difference with the old way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to turn off Hardware Accelerated Decoder]]></title>
    <link href="http://blog.mplayerx.org/blog/2014/01/15/how-to-turn-off-hardware-accelerated-decoder/"/>
    <updated>2014-01-15T11:16:00+09:00</updated>
    <id>http://blog.mplayerx.org/blog/2014/01/15/how-to-turn-off-hardware-accelerated-decoder</id>
    <content type="html"><![CDATA[<p>MPlayerX supports to decode the video with Hardware Accelerated Decoder (HAD). This feature uses your modern GPU to decode video frame, so that free your CPU for other tasks, and decrease the power consumption in the meantime, hopefully.</p>

<p>Currently, there is no easy way to turn on/off the HAD. And ideally, this feature should be transparent to users, and HAD should be always turned on.</p>

<p>However, the development on HAD is still in the preliminary stage, sometimes HAD may fail to decode the frame and even cause MPlayerX's core crash.</p>

<p>If you found MPlayerX failed to play some H264, MP4, MPEG2, AVC contents, please try the following instructions to turn off HAD.</p>

<!-- more -->


<h4>in Preference → Advanced → Extra options, copy&amp;paste the following string</h4>

<p><code>
-vc -ffh264vda,
</code></p>

<p>PLEASE DO NOT FORGET THE COMMA!</p>

<p>As you could tell in the snapshot,</p>

<p><img src="/images/turn-off-had.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's getting easier to open videos online]]></title>
    <link href="http://blog.mplayerx.org/blog/2013/12/26/its-getting-easier-to-open-online-videos/"/>
    <updated>2013-12-26T16:51:00+09:00</updated>
    <id>http://blog.mplayerx.org/blog/2013/12/26/its-getting-easier-to-open-online-videos</id>
    <content type="html"><![CDATA[<p>In previous versions, MPlayerX could play the videos in <a href="http://www.youtube.com">Youtube.com</a> directly.</p>

<p>However, you have to copy the URL → open MPlayerX → open URL panel → paste the URL, kind of annoying and even stop myself using this feature.</p>

<p>From 1.0.21, MPlayerX simplifies the usage much more, furthermore, <a href="http://vimeo.com">vimeo</a>, <a href="http://youku.com">youku</a>, <a href="http://instagram.com">Instagram</a> are getting supported.</p>

<p>Here is how to:</p>

<!-- more -->


<h3>1. Drag the link directly</h3>

<p><img src="/images/MPlayerX-Open-URL/001.jpg" width="800" height="500" title="1" ></p>

<p><img src="/images/MPlayerX-Open-URL/002.jpg" width="800" height="500" title="1" ></p>

<p><img src="/images/MPlayerX-Open-URL/003.jpg" width="800" height="500" title="1" ></p>

<h3>2. Open the URL in Services menu</h3>

<p><img src="/images/MPlayerX-Open-URL/004.jpg" width="800" height="500" title="1" ></p>

<h3>In case you don't see "MPlayerX: Open URL" in the contextual menu, please go to System Preference to enable it.</h3>

<p><img src="/images/MPlayerX-Open-URL/005.jpg" width="800" height="500" title="1" ></p>

<p>Note: if there is no entry in System Preference, you could log off and on once. Sometimes OS needs to re-login to find the necessary info from application's package.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use version number with Xcode and git]]></title>
    <link href="http://blog.mplayerx.org/blog/2013/05/10/use-version-number-with-xcode-and-git/"/>
    <updated>2013-05-10T13:25:00+09:00</updated>
    <id>http://blog.mplayerx.org/blog/2013/05/10/use-version-number-with-xcode-and-git</id>
    <content type="html"><![CDATA[<p>As a <a href="http://sparkle.andymatuschak.org">Sparkled</a> application, MPlayerX needs an automatic count-up mechanism between versions.</p>

<h3>1. Count up git versions</h3>

<p>  Git doesn't provide version number, it only gives out checksum of the commits, so let's make one.</p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>version.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;git rev-list HEAD | sort &gt; config.git-hash
</span><span class='line'><span class="nv">LOCALVER</span><span class="o">=</span>&lt;code&gt;wc -l config.git-hash | awk <span class="s1">&#39;{print $1}&#39;</span>&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> <span class="nv">$LOCALVER</span> &gt; 1 <span class="o">]</span> ; <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;VER<span class="o">=</span><span class="sb">`</span>git rev-list origin/master | sort | join config.git-hash - | wc -l | awk <span class="s1">&#39;{print $1}&#39;</span><span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="nv">$VER</span> !<span class="o">=</span> <span class="nv">$LOCALVER</span> <span class="o">]</span> ; <span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nv">VER</span><span class="o">=</span><span class="nv">$LOCALVER</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="c">## 0 is initial number</span>
</span><span class='line'><span class="nv">VER</span><span class="o">=</span><span class="sb">`</span>expr <span class="k">${</span><span class="nv">VER</span><span class="k">}</span> + 0<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$VER</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;else&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;VER<span class="o">=</span><span class="s2">&quot;unknown&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fi
</span><span class='line'>rm -f config.git-hash
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>  You could download this piece of script <a href="https://raw.github.com/niltsh/MPlayerX/sparkle/MPlayerX/version.sh">here</a>.</p>

<p>  Please note that this script always count up commits in the remote branch <strong>origin/master</strong> and local, so change the <strong>8th</strong> line if you want to work in other branches.</p>

<p>  You could set an initial number if necessary, in the <strong>15th</strong> line.</p>

<h3>2. Modify the info.plist by the version number</h3>

<p>  At first I implemented by some dirty string matching scripts, it works but ugly. Then I found <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ScriptingBridgeConcepts/Introduction/Introduction.html">ScriptingBridge</a>, thanks to it I could access the plist by ruby as I do by ObjC, this is much easier.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>updateInfoPlist.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;osx/cocoa&#39;</span>
</span><span class='line'><span class="kp">include</span> <span class="no">OSX</span>
</span><span class='line'><span class="no">OSX</span><span class="o">.</span><span class="n">require_framework</span> <span class="s1">&#39;ScriptingBridge&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;info = NSMutableDictionary.alloc.initWithContentsOfFile_(ARGV[0])&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="n">info</span> <span class="o">!=</span> <span class="kp">nil</span> <span class="k">then</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;## could read the plist file</span>
</span><span class='line'><span class="sr">currentVersion = %x[bash version.sh]</span>
</span><span class='line'>
</span><span class='line'><span class="sr">if currentVersion == &quot;unknown&quot; then</span>
</span><span class='line'><span class="sr">    puts &quot;version is invalid!&quot;</span>
</span><span class='line'><span class="sr">else</span>
</span><span class='line'><span class="sr">    puts &quot;version is valid:&quot; + currentVersion</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    currentVersion = currentVersion.chomp</span>
</span><span class='line'><span class="sr">    info.setValue_forKey_(currentVersion, &quot;CFBundleVersion&quot;)</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    ## also grab the commit checksum</span>
</span><span class='line'><span class="sr">    commitHash = %x[git rev-list --max-count=1 HEAD]</span>
</span><span class='line'><span class="sr">    commitHash = commitHash.chomp</span>
</span><span class='line'><span class="sr">    info.setValue_forKey_(commitHash, &quot;CommitHash&quot;)</span>
</span><span class='line'><span class="sr">    info.writeToFile_atomically_(ARGV[0], 0)</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>  This piece of script could be downloaded <a href="https://raw.github.com/niltsh/MPlayerX/sparkle/MPlayerX/updateInfoPlist.rb">here</a>.</p>

<h3>3. Automate it</h3>

<p>0. Put the two script files above into your project folder, and then open your project.</p>

<p>1. Add a new <em>Aggregate Target</em>, let's say <strong>Update version in info.plist</strong>.</p>

<p>2. Inside of this target, add a <em>Run Script</em> build phase.</p>

<p>3. Add the following code into the shell area.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;shell script goes here&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">PATH</span><span class="o">=</span><span class="k">${</span><span class="nv">PATH</span><span class="k">}</span>:/usr/local/bin:/usr/local/git/bin:/sw/bin&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ruby updateInfoPlist.rb Info.plist
</span><span class='line'>touch -amfc Info.plist&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;exit 0
</span></code></pre></td></tr></table></div></figure></notextile></div>
4. Then go back to your application target, <em>add the dependency</em>.</p>

<p><img src="/images/use-version-number-with-xcode-and-git-1.png" width="1000" height="800" title="0-1-2-3" >
<img src="/images/use-version-number-with-xcode-and-git-2.png" width="800" height="150" title="4" ></p>

<h3>Notice</h3>

<p>   Remember to deploy your application always in the same branch, otherwise the number could be messed up, since the script only count up commits in origin/master and you current local branch.</p>
]]></content>
  </entry>
  
</feed>
